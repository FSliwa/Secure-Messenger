#!/bin/bash

echo "üîí KONFIGURACJA SSL DLA SECURE-MESSENGER.INFO"
echo "=============================================="
echo ""

# Sprawd≈∫ czy skrypt jest uruchamiany jako root
if [ "$EUID" -ne 0 ]; then 
    echo "‚ùå Ten skrypt musi byƒá uruchomiony jako root (sudo)"
    exit 1
fi

# Zmienne
DOMAIN="secure-messenger.info"
EMAIL="admin@secure-messenger.info"  # Zmie≈Ñ na sw√≥j email

echo "üìß Email dla powiadomie≈Ñ Let's Encrypt: $EMAIL"
echo "üåê Domena: $DOMAIN"
echo ""

# 1. Instalacja Certbot
echo "1Ô∏è‚É£ Instalacja Certbot..."
apt update
apt install -y certbot python3-certbot-nginx

# 2. Zatrzymaj Nginx aby zwolniƒá port 80
echo ""
echo "2Ô∏è‚É£ Zatrzymywanie Nginx..."
systemctl stop nginx
docker-compose -f /opt/Secure-Messenger/deployment/docker/docker-compose.production.yml down 2>/dev/null || true

# 3. Uzyskaj certyfikat SSL
echo ""
echo "3Ô∏è‚É£ Pobieranie certyfikatu SSL..."
certbot certonly --standalone \
    --non-interactive \
    --agree-tos \
    --email "$EMAIL" \
    -d "$DOMAIN" \
    -d "www.$DOMAIN"

if [ $? -ne 0 ]; then
    echo "‚ùå Nie uda≈Ço siƒô uzyskaƒá certyfikatu SSL"
    echo "Sprawd≈∫ czy:"
    echo "1. DNS wskazuje na ten serwer (5.22.223.49)"
    echo "2. Port 80 jest otwarty"
    echo "3. Domena jest dostƒôpna z internetu"
    exit 1
fi

# 4. Skopiuj konfiguracjƒô Nginx z SSL
echo ""
echo "4Ô∏è‚É£ Aktualizacja konfiguracji Nginx..."
if [ -f /opt/Secure-Messenger/deployment/nginx/nginx-ssl.conf ]; then
    cp /opt/Secure-Messenger/deployment/nginx/nginx-ssl.conf /etc/nginx/nginx.conf
    echo "‚úÖ Konfiguracja Nginx zaktualizowana"
else
    echo "‚ö†Ô∏è  Plik nginx-ssl.conf nie znaleziony, u≈ºywam domy≈õlnej konfiguracji"
fi

# 5. Test konfiguracji Nginx
echo ""
echo "5Ô∏è‚É£ Testowanie konfiguracji Nginx..."
nginx -t

if [ $? -ne 0 ]; then
    echo "‚ùå B≈ÇƒÖd w konfiguracji Nginx"
    exit 1
fi

# 6. Restart Nginx
echo ""
echo "6Ô∏è‚É£ Uruchamianie Nginx..."
systemctl start nginx
systemctl enable nginx

# 7. Konfiguracja automatycznego odnawiania
echo ""
echo "7Ô∏è‚É£ Konfiguracja automatycznego odnawiania..."
systemctl enable certbot.timer
systemctl start certbot.timer

# 8. Test odnawiania (dry run)
echo ""
echo "8Ô∏è‚É£ Test automatycznego odnawiania..."
certbot renew --dry-run

echo ""
echo "‚úÖ SSL ZOSTA≈ÅO SKONFIGUROWANE!"
echo "=============================="
echo ""
echo "Certyfikaty znajdujƒÖ siƒô w:"
echo "/etc/letsencrypt/live/$DOMAIN/"
echo ""
echo "Automatyczne odnawianie:"
echo "Certbot bƒôdzie automatycznie odnawia≈Ç certyfikaty przed wyga≈õniƒôciem"
echo ""
echo "Sprawd≈∫ status:"
echo "systemctl status certbot.timer"
echo ""
echo "Twoja aplikacja jest teraz dostƒôpna pod:"
echo "üåê https://$DOMAIN"
echo "üåê https://www.$DOMAIN"
echo ""
echo "HTTP (port 80) automatycznie przekierowuje na HTTPS (port 443)"
